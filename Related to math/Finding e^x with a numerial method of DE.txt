-----C++
#include<iostream>
using namespace std;

//e^10 까지 가능, if they are in the function stack overflow occurs
double x[10000001] = { 0 };
double y[10000001] = { 1 };
double dy_dx[10000001] = { 1 };
void e_to_the_x(int a) {
	double x_step = 0.000001;
	int compensate_for_x_step = 1000000;

	for (int i = 0; i < a * compensate_for_x_step; i++) {
		x[i + 1] = x[i] + x_step;
		y[i + 1] = y[i] + dy_dx[i] * x_step; // y[i+1] = y[i] + y의 변화량
		dy_dx[i + 1] = y[i + 1]; // 변수분리법으로 풀면 y=e^x이다.
	}

	int i = a * compensate_for_x_step;
	cout << "x=" << x[i] << " y=" << y[i] << " dy/dx=" << dy_dx[i] << endl;
}

int main() {
	e_to_the_x(5);
}

-----Python
x = [0]
y = [1] 
dy_dx = [1]
def e_to_the_x(a):
    x_step = 0.000001
    compensate_for_x_step = 1000000
    for i in range(a * compensate_for_x_step):
        x.append(0)
        y.append(0)
        dy_dx.append(0)
        x[i + 1] = x[i] + x_step
        y[i + 1] = y[i] + dy_dx[i] * x_step
        dy_dx[i + 1] = y[i + 1]

    i = a * compensate_for_x_step
    print("x",x[i],"y=",y[i],"dy/dx=",dy_dx[i])

e_to_the_x(5)
