#include <iostream>
#include <math.h>

using namespace std;

void prime_number_sieve(int max) {
    //unique_ptr<bool> is_prime(new bool[range + 1]{});
    bool* is_prime = new bool[max + 1]{true, };

    for (int i = 2; i <= max; i++) // Initialize all the elements to true
        is_prime[i] = true;

    for (int i = 2; i <= sqrt(max); i++) { // Sieve
        if (is_prime[i] == false) 
            continue; // If i has been removed because it's not a prime number, the multiples of i has already been removed earlier, so continue;
        for (int j = i * 2; j <= max / i; j += i) // If j is greater than (max / i), i * j exceeds the maximum 
            is_prime[j] = false; // Delete all the multiples of i
    }

    for (int i = 2; i <= max; i++) // Print sieved prime numbers
        if (is_prime[i] == true)
            cout << i << " ";
}

int main(void) {
    prime_number_sieve(120);
    return 0;
}