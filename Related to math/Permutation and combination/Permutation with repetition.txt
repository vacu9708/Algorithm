-----Number of cases : 4^3
#include <iostream>
#include <vector>
#include <list>
using namespace std;

vector<char> set = { 'a','b','c','d' };
list<char> result;
int r = 3; // number of elements to arrange
int n_of_cases = 0;

void dfs(int level) {
	if (level == r) {
		n_of_cases++;
		for (char i : result)
			cout << i << " ";
		printf("/ Number of cases : %d\n", n_of_cases);
		return;
	}

	for (int i = 0; i < set.size(); i++) {
		result.push_back(set[i]);
		dfs(level + 1);
		result.pop_back();
	}
}
int main() {
	dfs(0);
}

-----Number of cases : 4^4
#include <iostream>
#include <vector>
using namespace std;

vector<char> set = { 'a','b','c','d' };
vector<char> result(set.size());
int n_of_cases = 0;

void dfs(int level) {
	if (level == set.size()) {
		n_of_cases++;
		for (char i : result)
			cout << i << " ";
		printf("/ Number of cases : %d\n", n_of_cases);
		return;
	}

	for (int i = 0; i < set.size(); i++) {
		result[level] = set[i];
		dfs(level + 1);
	}
}

int main() {
	dfs(0);
}